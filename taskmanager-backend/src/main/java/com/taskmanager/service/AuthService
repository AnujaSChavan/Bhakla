package com.taskmanager.service;

import com.taskmanager.dto.*;
import com.taskmanager.entity.User;
import com.taskmanager.repository.UserRepository;
import com.taskmanager.security.JwtUtil;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

@Service
public class AuthService {

  @Autowired
  private UserRepository userRepository;

  @Autowired
  private PasswordEncoder passwordEncoder;

  @Autowired
  private JwtUtil jwtUtil;

  public void register(RegisterRequest req) {
    if (userRepository.existsByEmail(req.getEmail())) {
      throw new IllegalArgumentException("Email already in use");
    }
    if (userRepository.existsByUsername(req.getUsername())) {
      throw new IllegalArgumentException("Username already in use");
    }
    User u = User.builder()
        .username(req.getUsername())
        .email(req.getEmail())
        .password(passwordEncoder.encode(req.getPassword()))
        .build();
    userRepository.save(u);
  }

  public String login(AuthRequest req) {
    User user = userRepository.findByEmail(req.getEmail())
        .orElseThrow(() -> new IllegalArgumentException("Invalid credentials"));
    if (!passwordEncoder.matches(req.getPassword(), user.getPassword())) {
      throw new IllegalArgumentException("Invalid credentials");
    }
    // use email as subject
    return jwtUtil.generateToken(user.getEmail());
  }
}
